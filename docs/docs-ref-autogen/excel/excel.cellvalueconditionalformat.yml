### YamlMime:UniversalReference
ms.openlocfilehash: 43d92e3841c6af3a2631e57ab5e058ed037c501c
ms.sourcegitcommit: beffe9455dace422e85b92f0105c54ff7b594cbf
ms.translationtype: MT
ms.contentlocale: zh-CN
ms.lasthandoff: 09/20/2018
ms.locfileid: "24041406"
items:
- uid: excel.Excel.CellValueConditionalFormat
  summary: >-
    <span data-ttu-id="24540-101">代表单元格值条件格式</span><span class="sxs-lookup"><span data-stu-id="24540-101">Represents a cell value conditional format.</span></span>


    <span data-ttu-id="24540-102">\[[API 集： ExcelApi 1.6](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="24540-102">\[ [API set: ExcelApi 1.6](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.CellValueConditionalFormat
  fullName: excel.Excel.CellValueConditionalFormat
  langs:
  - typeScript
  type: class
  extends:
  - OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.CellValueConditionalFormat.format
  - excel.Excel.CellValueConditionalFormat.load
  - excel.Excel.CellValueConditionalFormat.rule
  - excel.Excel.CellValueConditionalFormat.toJSON
- uid: excel.Excel.CellValueConditionalFormat.format
  summary: >-
    <span data-ttu-id="24540-103">返回一个格式对象，封装的条件格式字体、 填充、 边框和其他属性。</span><span class="sxs-lookup"><span data-stu-id="24540-103">Returns a format object, encapsulating the conditional formats font, fill, borders, and other properties.</span></span>


    <span data-ttu-id="24540-104">\[[API 集： ExcelApi 1.6](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="24540-104">\[ [API set: ExcelApi 1.6](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: format
  fullName: excel.Excel.CellValueConditionalFormat.format
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly format: Excel.ConditionalRangeFormat;'
    return:
      type:
      - excel.Excel.ConditionalRangeFormat
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"24540-105\">示例</span><span class=\"sxs-lookup\"><span data-stu-id=\"24540-105\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const range = sheet.getRange(\"B21:E23\");\n    const conditionalFormat = range.conditionalFormats\n        .add(Excel.ConditionalFormatType.cellValue);\n    conditionalFormat.cellValue.format.font.color = \"red\";\n    conditionalFormat.cellValue.rule = { formula1: \"=0\", operator: \"LessThan\" };\n\n    await context.sync();\n});\n```"
- uid: excel.Excel.CellValueConditionalFormat.load
  summary: <span data-ttu-id="24540-106">队列设置命令加载指定的对象的属性。</span><span class="sxs-lookup"><span data-stu-id="24540-106">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="24540-107">读取属性之前，必须调用"context.sync()"。</span><span class="sxs-lookup"><span data-stu-id="24540-107">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="24540-108">除了此签名，此方法具有以下签名：</span><span class="sxs-lookup"><span data-stu-id="24540-108">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="24540-109">`load(option?: { select?: string; expand?: string; }): Excel.CellValueConditionalFormat`-其中 option.select 是一个以逗号分隔的字符串，指定要加载的属性，options.expand 是一个以逗号分隔的字符串，指定要加载的导航属性。</span><span class="sxs-lookup"><span data-stu-id="24540-109">`load(option?: { select?: string; expand?: string; }): Excel.CellValueConditionalFormat` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="24540-110">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.CellValueConditionalFormat`-仅可对集合的类型。</span><span class="sxs-lookup"><span data-stu-id="24540-110">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.CellValueConditionalFormat` - Only available on collection types.</span></span> <span data-ttu-id="24540-111">它是类似于前一个签名。</span><span class="sxs-lookup"><span data-stu-id="24540-111">It is similar to the preceding signature.</span></span> <span data-ttu-id="24540-112">Option.top 指定集合项可在结果中包含的最大数目。</span><span class="sxs-lookup"><span data-stu-id="24540-112">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="24540-113">Option.skip 指定要跳过和结果中不包含的项的数目。</span><span class="sxs-lookup"><span data-stu-id="24540-113">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="24540-114">如果指定 option.top，则将跳过指定的数目的项后启动结果集。</span><span class="sxs-lookup"><span data-stu-id="24540-114">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: excel.Excel.CellValueConditionalFormat.load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): Excel.CellValueConditionalFormat;'
    return:
      type:
      - excel.Excel.CellValueConditionalFormat
      description: ''
    parameters:
    - id: option
      description: <span data-ttu-id="24540-115">以逗号分隔字符串或一个指定要加载的属性的字符串数组。</span><span class="sxs-lookup"><span data-stu-id="24540-115">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.CellValueConditionalFormat.rule
  summary: >-
    <span data-ttu-id="24540-116">表示此条件格式中的 Rule 对象。</span><span class="sxs-lookup"><span data-stu-id="24540-116">Represents the Rule object on this conditional format.</span></span>


    <span data-ttu-id="24540-117">\[[API 集： ExcelApi 1.6](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="24540-117">\[ [API set: ExcelApi 1.6](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: rule
  fullName: excel.Excel.CellValueConditionalFormat.rule
  langs:
  - typeScript
  type: property
  syntax:
    content: 'rule: Excel.ConditionalCellValueRule;'
    return:
      type:
      - excel.Excel.ConditionalCellValueRule
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"24540-118\">示例</span><span class=\"sxs-lookup\"><span data-stu-id=\"24540-118\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const range = sheet.getRange(\"B21:E23\");\n    const conditionalFormat = range.conditionalFormats\n        .add(Excel.ConditionalFormatType.cellValue);\n    conditionalFormat.cellValue.format.font.color = \"red\";\n    conditionalFormat.cellValue.rule = { formula1: \"=0\", operator: \"LessThan\" };\n\n    await context.sync();\n});\n```"
- uid: excel.Excel.CellValueConditionalFormat.toJSON
  name: toJSON()
  fullName: excel.Excel.CellValueConditionalFormat.toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.CellValueConditionalFormatData;'
    return:
      type:
      - excel.Excel.Interfaces.CellValueConditionalFormatData
      description: ''
